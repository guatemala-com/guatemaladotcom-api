// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model AprLearnMeta {
  id                     Int     @id @map("ID")
  url                    String? @db.Text
  thumbnailId            Int?
  authorId               Int?
  authorName             String? @db.VarChar(255)
  images                 String? @db.Text
  isSponsored            Boolean @default(false)
  // sponsorName            String? @db.VarChar(255)
  // sponsorUrl             String? @db.Text
  // sponsorImage           Int?    @default(0)
  // sponsorImageSidebarUrl String? @db.Text
  // sponsorImageSidebar    Int?    @default(0)
  // sponsorImageContentUrl String? @db.Text
  // sponsorImageContent    Int?    @default(0)
  // sponsorExtraData       String? @db.Text removing sponsor info (deprecated)
}

model AprPostmeta {
  metaId    BigInt    @id @default(autoincrement())
  postId    BigInt
  metaKey   String?   @db.VarChar(255)
  metaValue String?   @db.LongText
  // Relations
  post      AprPosts? @relation(fields: [postId], references: [id])
}


// todo: check if we need all these fields
// todo: add seo fields
model AprPosts {
  id                  BigInt        @id @default(autoincrement()) @map("ID")
  postAuthor          BigInt        @default(0)
  postDate            DateTime?
  postDateGmt         DateTime?
  postContent         String        @db.LongText
  postTitle           String        @db.Text
  postExcerpt         String        @db.Text
  postStatus          String        @default("publish") @db.VarChar(20)
  commentStatus       String        @default("open") @db.VarChar(20)
  pingStatus          String        @default("open") @db.VarChar(20)
  postPassword        String        @db.VarChar(255)
  postName            String        @db.VarChar(200)
  toPing              String        @db.Text
  pinged              String        @db.Text
  postModified        DateTime?
  postModifiedGmt     DateTime?
  postContentFiltered String        @db.LongText
  postParent          BigInt        @default(0)
  guid                String        @db.VarChar(255)
  menuOrder           Int           @default(0)
  postType            String        @default("post") @db.VarChar(20)
  postMimeType        String        @db.VarChar(100)
  commentCount        BigInt        @default(0)
  metas               AprPostmeta[]
}

// todo: Users or Authors?
model AprUsers {
  id                BigInt    @id @default(autoincrement()) @map("ID")
  userLogin         String    @db.VarChar(60)
  userPass          String    @db.VarChar(255)
  userNicename      String    @db.VarChar(50)
  userEmail         String    @db.VarChar(100)
  userUrl           String    @db.VarChar(100)
  userRegistered    DateTime?
  userActivationKey String    @db.VarChar(255)
  userStatus        Int       @default(0)
  displayName       String    @db.VarChar(250)
}