generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model AprPosts {
  id                  BigInt   @id @default(autoincrement()) @map("ID") @db.UnsignedBigInt
  postAuthor          BigInt   @default(0) @map("post_author") @db.UnsignedBigInt
  postDate            DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @map("post_date") @db.DateTime(0)
  postDateGmt         DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @map("post_date_gmt") @db.DateTime(0)
  postContent         String   @map("post_content") @db.LongText
  postTitle           String   @map("post_title") @db.Text
  postExcerpt         String   @map("post_excerpt") @db.Text
  postStatus          String   @default("publish") @map("post_status") @db.VarChar(20)
  commentStatus       String   @default("open") @map("comment_status") @db.VarChar(20)
  pingStatus          String   @default("open") @map("ping_status") @db.VarChar(20)
  postPassword        String   @default("") @map("post_password") @db.VarChar(255)
  postName            String   @default("") @map("post_name") @db.VarChar(200)
  toPing              String   @map("to_ping") @db.Text
  pinged              String   @map("pinged") @db.Text
  postModified        DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @map("post_modified") @db.DateTime(0)
  postModifiedGmt     DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @map("post_modified_gmt") @db.DateTime(0)
  postContentFiltered String   @map("post_content_filtered") @db.LongText
  postParent          BigInt   @default(0) @map("post_parent") @db.UnsignedBigInt
  guid                String   @default("") @db.VarChar(255)
  menuOrder           Int      @default(0) @map("menu_order")
  postType            String   @default("post") @map("post_type") @db.VarChar(20)
  postMimeType        String   @default("") @map("post_mime_type") @db.VarChar(100)
  commentCount        BigInt   @default(0) @map("comment_count")

  // Relations
  metas               AprPostmeta[]          @relation("PostMetas")
  termRelationships   AprTermRelationships[] @relation("PostTerms")

  @@index([postName(length: 191)], map: "post_name")
  @@index([postType, postStatus, postDate, id], map: "type_status_date")
  @@index([postParent], map: "post_parent")
  @@index([postAuthor], map: "post_author")
  @@map("apr_posts")
}

model AprPostmeta {
  metaId    BigInt  @id @default(autoincrement()) @map("meta_id") @db.UnsignedBigInt
  postId    BigInt  @default(0) @map("post_id") @db.UnsignedBigInt
  metaKey   String? @map("meta_key") @db.VarChar(255)
  metaValue String? @map("meta_value") @db.LongText

  // Relations
  post      AprPosts @relation("PostMetas", fields: [postId], references: [id])

  @@index([postId], map: "post_id")
  @@index([metaKey(length: 191)], map: "meta_key")
  @@map("apr_postmeta")
}

model AprLearnMeta {
  id                     Int      @id @map("ID") @db.UnsignedInt
  url                    String?  @db.Text
  thumbnailId            Int?     @map("thumbnail_id")
  authorId               Int?     @map("author_id")
  authorName             String?  @map("author_name") @db.VarChar(255)
  images                 String?  @db.Text
  isSponsored            Boolean? @default(false) @map("is_sponsored")
  sponsorName            String?  @map("sponsor_name") @db.VarChar(255)
  sponsorUrl             String?  @map("sponsor_url") @db.Text
  sponsorImage           Int?     @default(0) @map("sponsor_image")
  sponsorImageSidebarUrl String?  @map("sponsor_image_sidebar_url") @db.Text
  sponsorImageSidebar    Int?     @default(0) @map("sponsor_image_sidebar")
  sponsorImageContentUrl String?  @map("sponsor_image_content_url") @db.Text
  sponsorImageContent    Int?     @default(0) @map("sponsor_image_content")
  sponsorExtraData       String?  @map("sponsor_extra_data") @db.Text

  @@map("apr_learn_meta")
}

model AprTerms {
  termId    BigInt @id @default(autoincrement()) @map("term_id") @db.UnsignedBigInt
  name      String @default("") @db.VarChar(200)
  slug      String @default("") @db.VarChar(200)
  termGroup BigInt @default(0) @map("term_group")

  // Relations
  taxonomies AprTermTaxonomy[] @relation("TermTaxonomyTerm")

  @@index([name(length: 191)], map: "name")
  @@index([slug(length: 191)], map: "slug")
  @@map("apr_terms")
}

model AprTermTaxonomy {
  termTaxonomyId BigInt @id @default(autoincrement()) @map("term_taxonomy_id") @db.UnsignedBigInt
  termId         BigInt @default(0) @map("term_id") @db.UnsignedBigInt
  taxonomy       String @default("") @db.VarChar(32)
  description    String @db.LongText
  parent         BigInt @default(0) @db.UnsignedBigInt
  count          BigInt @default(0)

  // Relations
  term           AprTerms               @relation("TermTaxonomyTerm", fields: [termId], references: [termId])
  relationships  AprTermRelationships[] @relation("TermRelations")

  @@unique([termId, taxonomy], map: "term_id_taxonomy")
  @@index([taxonomy], map: "taxonomy")
  @@map("apr_term_taxonomy")
}

model AprTermRelationships {
  objectId       BigInt @default(0) @map("object_id") @db.UnsignedBigInt
  termTaxonomyId BigInt @default(0) @map("term_taxonomy_id") @db.UnsignedBigInt
  termOrder      Int    @default(0) @map("term_order")

  // Relations
  post           AprPosts        @relation("PostTerms", fields: [objectId], references: [id])
  termTaxonomy   AprTermTaxonomy @relation("TermRelations", fields: [termTaxonomyId], references: [termTaxonomyId])

  @@id([objectId, termTaxonomyId])
  @@index([termTaxonomyId], map: "term_taxonomy_id")
  @@map("apr_term_relationships")
}












